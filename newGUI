#!/usr/bin/ksh -f

. blissrc

function printusage {
  echo "Usage: $1 <gui filename> [<hardware repository host[:port]>]"
  exit 1
}

if (( $# == 0 )); then
  printusage $0
fi

if [[ "$1" == "--just-script" ]]; then
  justscript=1
  shift
else
  justscript=0
fi

if (( $# > 2 )); then
  printusage $0
fi

if [[ "$1" == "-h" ]] then
  printusage $0
fi

if [[ "$1" == "--help" ]] then
  printusage $0
fi

host=`echo $2 | awk -F: '{ print $1 }'`
port=`echo $2 | awk -F: '{ print $2 }'`

if [[ "$host" == "" ]]; then
  host=$HOST
fi

if [[ "$port" == "" ]]; then
  port='hwr'
fi

old_dir=`pwd`

guidir=`dirname $1`
if [[ "$guidir" == "." ]]; then
  guidir=$GUI_APPLICATIONS_DIRECTORY
fi

if [[ -d "$guidir" ]]; then  
  guiname=`echo \`basename $1\` | awk -F. '{ print $1 }'`
  guiext=`echo $1 | awk -F. '{ print $2 }'`
  if [[ "$guiext" == "" ]]; then
    guiext="gui"
  fi
  scriptname=$BLISSADM/local/bin/$guiname
  guifilename=$guidir/$guiname.$guiext
  
  cd $guidir

  if (( $justscript == 0 )); then
    if [[ -f "$guifilename" ]]; then
      echo "A GUI with this name already exists, sorry."
      exit
    fi
  fi
   
  if [[ -f "$scriptname" ]]; then
    echo  "A script with this name already exists, sorry."
    exit
  fi
  
  if (( $justscript == 0 )); then
    echo "New GUI file        : \`$guifilename'"
    echo "Hardware Repository : $host:$port"
    echo "New launch script   : \`$scriptname'"
    echo "Are you sure to Continue ? (y/n)"

    read yn
  else
    echo "Creating script     : \`$scriptname'"
    echo "to launch GUI       : \`$guifilename'"
    yn="y"
  fi

  if [[ "$yn" == "y" ]]; then
    if (( $justscript == 0 )); then
      touch $guifilename
    fi

    chmod 666 $guifilename 2>/dev/null
   
    cd $old_dir

    echo "exec startGUI --hardwareRepository=$host:$port $guifilename \$*" >$scriptname
    
    chmod 755 $scriptname

    echo "Done."
  fi
else
  echo "Cannot create GUI project: directory $guidir does not exist."
  echo "Please define the default GUI_APPLICATIONS_DIRECTORY environment variable."
fi
  
